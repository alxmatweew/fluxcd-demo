apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: loki
spec:
  interval: 5m
  chart:
    spec:
      chart: loki  # Название чарта
      version: "6.12.0" # Версия чарта (опционально)
      sourceRef:
        kind: HelmRepository
        name: loki-repo
        namespace: flux-system
      interval: 1m
  values:
    loki:
      limits_config:
        retention_period: "10h"   #<------------------- Добавить интервал очистки (все что старше - удалять)
        max_cache_freshness_per_query: 10m
        query_timeout: 300s
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        split_queries_by_interval: 15m
        volume_enabled: true
      compactor: 
        delete_request_store: s3 
        compaction_interval: 10m
        retention_enabled: true
        retention_delete_delay: 10m #1h 
        retention_delete_worker_count: 150 
        working_directory: /var/loki/chunks
      schemaConfig:
        configs:
          - from: 2024-04-01
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      ingester:
        chunk_encoding: snappy
      tracing:
        enabled: true
      querier:
        # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
        max_concurrent: 4
      # Should authentication be enabled
      auth_enabled: false
    chunksCache:
      # -- Specifies whether memcached based chunks-cache should be enabled
      enabled: true
      # -- Amount of memory allocated to chunks-cache for object storage (in MB).
      allocatedMemory: 512
      # -- Tolerations for chunks-cache pods
      tolerations:
      - key: node-role.kubernetes.io/control-plane
    # gateway:
    #   ingress:
    #     enabled: true
    #     hosts:
    #       - host: loki-gateway.home.loc
    #         paths:
    #           - path: /
    #             pathType: Prefix
    deploymentMode: SimpleScalable
    backend:
      replicas: 2
    read:
      replicas: 2
    write:
      replicas: 2
    # Enable minio for storage
    minio:
      enabled: true
    # Zero out replica counts of other deployment modes
    singleBinary:
      replicas: 0
    ingester:
      replicas: 0
    querier:
      replicas: 0
    queryFrontend:
      replicas: 0
    queryScheduler:
      replicas: 0
    distributor:
      replicas: 0
    compactor:
      replicas: 0
    indexGateway:
      replicas: 0
    bloomCompactor:
      replicas: 0
    bloomGateway:
      replicas: 0
         